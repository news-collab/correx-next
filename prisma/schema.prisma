generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// A platform's post (Twitter tweet/Reddit submission).
model posts {
  id           String   @id @default(uuid())
  platform     platform @default(TWITTER)
  platform_id  String   @db.VarChar
  platform_url String   @db.VarChar
  data         Json
  subject_id   String?
  user_id      String?

  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)

  replies replies[]
  subject subjects? @relation(fields: [subject_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user    users?    @relation(fields: [user_id], references: [id])

  @@index([platform_url])
  @@index([platform_id])
  @@index([id])
}

// A direct reply via Correx to a platform's post (Twitter tweet/Reddit submission).
model replies {
  id          String    @id @default(uuid())
  platform    platform  @default(TWITTER)
  platform_id String    @db.VarChar
  data        Json
  post_id     String?
  author_id   String?
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)

  author users? @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  post   posts? @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id])
  @@index([platform_id])
  @@index([post_id])
  @@index([author_id])
}

// The "thing" being searched for.
model subjects {
  id           String    @id @default(uuid())
  url          String    @db.VarChar
  metadata     Json      @default("{}")
  submitter_id String?
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)

  posts     posts[]
  submitter users?  @relation(fields: [submitter_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id])
  @@index([url])
  @@index([metadata])
  @@index([submitter_id])
}

// Correx users.
model users {
  id               String    @id @default(uuid())
  name             String?   @db.VarChar
  email            String?   @db.VarChar
  avatar_url       String?
  twitter_user_id  Int?      @unique
  twitter_username String?   @unique
  reddit_user_id   String?   @unique
  reddit_username  String?   @unique
  admin            Boolean?  @default(false)
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  updated_at       DateTime? @default(now()) @db.Timestamp(6)

  post    posts[]
  reply   replies[]
  subject subjects[]
}

// An enum type used to indicate which platform a record belongs to.
enum platform {
  TWITTER
  REDDIT
}
